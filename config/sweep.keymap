#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Skoba_L {
            bindings = <&kp RBKT>;
            key-positions = <0 10>;
        };

        Tilda {
            bindings = <&kp TILDE>;
            key-positions = <10 20>;
        };

        Tabul {
            bindings = <&kp TAB>;
            key-positions = <4 14>;
        };

        Cherta {
            bindings = <&kp BSLH>;
            key-positions = <14 24>;
        };

        Delete {
            bindings = <&kp DEL>;
            key-positions = <5 25>;
        };

        Underscore {
            bindings = <&kp MINUS>;
            key-positions = <15 25>;
        };

        Scoba_R {
            bindings = <&kp LBKT>;
            key-positions = <9 19>;
        };

        Apostrophe {
            bindings = <&kp APOS>;
            key-positions = <19 29>;
        };

        comma {
            bindings = <&comma>;
            key-positions = <5 15>;
        };

        dot {
            bindings = <&dot>;
            key-positions = <6 16>;
        };

        colon {
            bindings = <&colon>;
            key-positions = <7 17>;
        };

        semicolon {
            bindings = <&semicolon>;
            key-positions = <8 18>;
        };
    };

    behaviors {
        F11_F12: F11_F12 {
            compatible = "zmk,behavior-tap-dance";
            label = "F11_F12";
            #binding-cells = <0>;
            bindings = <&kp F11>, <&kp F12>;;

            tapping-term-ms = <200>;
 
        };

        F9_F10: F9_F10 {
            compatible = "zmk,behavior-tap-dance";
            label = "F9_F10";
            #binding-cells = <0>;
            bindings = <&kp F9>, <&kp F10>;;

            tapping-term-ms = <200>;
        };

        Sticky_shift: Sticky_shift {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_SHIFT";
            bindings = <&kp>;
            #binding-cells = <1>;
            lazy;
            release-after-ms = <10000>;
        };
    };

    macros {
        colon: colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LSHFT) &kp LS(SEMI) &kp LC(LSHFT) &kp SPACE>;
            label = "COLON";
        };

        semicolon: semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LSHFT) &kp SEMI &kp LC(LSHFT) &kp SPACE>;
            label = "SEMICOLON";
        };

        comma: comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SLASH) &kp SPACE>;
            label = "COMMA";
        };

        dot: dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SLASH &kp SPACE &Sticky_shift LSHFT>;
            label = "DOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q        &kp W           &kp E        &kp R            &kp T          &kp Y      &kp U        &kp I       &kp O            &kp P
&kp A        &mt LEFT_GUI S  &mt LALT D   &mt LCTRL F      &kp G          &kp H      &mt RCTRL J  &mt RALT K  &mt RIGHT_GUI L  &kp SEMI
&mt LC(Z) Z  &mt LC(X) X     &mt LC(C) C  &mt LC(V) V      &kp B          &kp N      &kp M        &kp COMMA   &kp DOT          &kp SLASH
                                          &mt RSHFT SPACE  &lt 1 ENTER    &lt 2 ESC  &kp BSPC
            >;

            label = "Base";
        };

        layer_1 {
            bindings = <
&mt UNDERSCORE F1  &kp F2        &kp F3        &kp F4        &kp F5          &kp F6        &kp F7         &kp F8        &F9_F10               &F11_F12
&kp EXCLAMATION    &kp AT_SIGN   &kp POUND     &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPERSAND  &kp ASTRK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp N6        &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
                                               &trans        &trans          &lt 3 ESCAPE  &trans
            >;

            label = "Symbol";
        };

        layer_2 {
            bindings = <
&kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS    &kp C_VOLUME_UP    &none           &kp PSCRN       &kp PG_UP        &kp KP_NUM
&kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS     &kp C_MUTE         &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &none
&kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT      &kp C_VOLUME_DOWN  &none           &kp DOWN_ARROW  &kp PAGE_DOWN    &none
                                                   &none            &lt 3 ENTER     &none              &none
            >;

            label = "Num";
        };

        layer_3 {
            bindings = <
&sys_reset  &bootloader   &out OUT_BLE  &out OUT_USB  &out OUT_TOG    &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &bootloader   &sys_reset
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none       &none         &none         &none         &none           &none         &none         &none         &none         &none
                                        &none         &none           &none         &none
            >;

            label = "BlTooth";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
